import{c as e}from"./supabase-Ju67T4xf.js";const r=e("https://oathybjrmhtubbemjeyy.supabase.co","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9hdGh5YmpybWh0dWJiZW1qZXl5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc0MjMzOTIsImV4cCI6MjA3Mjk5OTM5Mn0.GlKHHQj1nhDGwF78Fr7zlKytRxEwXwlyRTlgEX6d4io",{auth:{autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!1,flowType:"pkce"},realtime:{params:{eventsPerSecond:2,heartbeatIntervalMs:3e4,reconnectAfterMs:[1e3,2e3,5e3,1e4]}},global:{headers:{"X-Client-Info":"eurodoor-customer-panel","Cache-Control":"max-age=600"}},db:{schema:"public"}}),t={}?.VITE_VAPID_PUBLIC_KEY||"BDKmEIAbWtoGMgyNKmKljaJVofmw81mqRz54IMqBRH0JZcdGCSG2pBfSM_cqfHRVGIvBzgw9Imm7Gqnp1eGVWUU";function s(e){const r=(e+"=".repeat((4-e.length%4)%4)).replace(/-/g,"+").replace(/_/g,"/"),t=atob(r);return Uint8Array.from([...t].map(e=>e.charCodeAt(0)))}function a(){return"serviceWorker"in navigator&&"PushManager"in window&&"Notification"in window}function o(){const e=i(),r=localStorage.getItem("notif:asked"),t=!!e;return a()&&"default"===Notification.permission&&!r&&t}function n(){try{localStorage.setItem("notif:asked","1")}catch{}}function i(){try{return localStorage.getItem("user:id")}catch{return null}}function c(e){try{localStorage.setItem("user:id",e)}catch{}}async function u(e){if(!a())throw new Error("Push not supported");const{data:{session:o}}=await r.auth.getSession();if(!o||!o.user)throw new Error("User not authenticated");if("granted"!==await Notification.requestPermission())throw new Error("Permission denied");const n=await async function(){if(!("serviceWorker"in navigator))throw new Error("SW not supported");return navigator.serviceWorker.register("/sw.js",{scope:"/"})}();let i;try{i=await n.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:s(t)})}catch(c){throw new Error(`Push subscription failed: ${c}`)}try{const t={user_id:e,subscription:i.toJSON(),created_at:(new Date).toISOString()},{data:s,error:a}=await r.from("push_subscriptions").upsert(t,{onConflict:"user_id"});if(a)throw a;return s}catch(c){throw c}}let d=null,m=0;const l={async getAllProducts(e=!1){if(!e&&d&&Date.now()-m<6e5)return d;for(let s=1;s<=3;s++)try{const{data:e,error:t}=await r.from("products").select("id, name, name_ru, name_en, description, description_ru, description_en, material, material_ru, material_en, security, security_ru, security_en, dimensions, dimensions_ru, dimensions_en, lock_stages, lock_stages_ru, lock_stages_en, thickness, price, currency, image, image_url, category, is_active, stock, slug, meta_title, meta_description, view_count, is_featured, sort_order, created_at, updated_at").eq("is_active",!0).order("created_at",{ascending:!1}).limit(100);if(t)throw new Error(`Database error: ${t.message}`);return d=e||[],m=Date.now(),d}catch(t){if(3===s){if(d)return d;throw t}await new Promise(e=>setTimeout(e,1e3*s))}throw new Error("All retry attempts failed")},async getProductById(e){try{if(d){const r=d.find(r=>r.id===e);if(r)return r}const{data:t,error:s}=await r.from("products").select("id, name, name_ru, name_en, description, description_ru, description_en, material, material_ru, material_en, security, security_ru, security_en, dimensions, dimensions_ru, dimensions_en, lock_stages, lock_stages_ru, lock_stages_en, thickness, price, currency, image, image_url, category, is_active, created_at, updated_at").eq("id",e).eq("is_active",!0).single();if(s)throw new Error(`Database error: ${s.message}`);return t}catch(t){throw t}},clearCache(){d=null,m=0}},h={async createOrder(e){try{const t={order_number:`EURO-${Date.now().toString().slice(-6)}`,customer_name:e.customer_name,customer_phone:e.customer_phone,customer_email:e.customer_email,delivery_address:e.delivery_address,notes:e.notes,total_amount:e.total_amount,products:e.products,status:"pending"},{data:s,error:a}=await r.from("orders").insert([t]).select().single();if(a)throw new Error(`Supabase error: ${a.message}`);return s}catch(t){throw t}},async getOrderByNumber(e){try{const{data:t,error:s}=await r.from("orders").select("*").eq("order_number",e).single();return s?null:t}catch(t){return null}},async getOrdersByCustomer(e){try{const{data:t,error:s}=await r.from("orders").select("*").eq("customer_phone",e).order("created_at",{ascending:!1});if(s)throw new Error(`Supabase error: ${s.message}`);return t||[]}catch(t){throw t}},async getAllOrders(){try{const{data:e,error:t}=await r.from("orders").select("*").order("created_at",{ascending:!1});if(t)throw new Error(`Supabase error: ${t.message}`);return e||[]}catch(e){throw e}},async updateOrderStatus(e,t){try{const{error:s}=await r.from("orders").update({status:t}).eq("id",e);if(s)throw new Error(`Supabase error: ${s.message}`);return!0}catch(s){throw s}},async getOrderItems(e){try{const{data:t,error:s}=await r.from("order_items").select("*").eq("order_id",e).order("created_at",{ascending:!0});if(s)throw new Error(`Supabase error: ${s.message}`);return t||[]}catch(t){throw t}},subscribeToOrders:e=>r.channel("orders").on("postgres_changes",{event:"*",schema:"public",table:"orders"},e).subscribe()},w={async createCustomer(e){try{const{data:t,error:s}=await r.from("customers").insert([e]).select().single();if(s)throw new Error(`Supabase error: ${s.message}`);return t}catch(t){throw t}},async getCustomerByPhone(e){try{const{data:t,error:s}=await r.from("customers").select("*").eq("phone",e).single();return s?null:t}catch(t){return null}},async updateCustomer(e,t){try{const{error:s}=await r.from("customers").update(t).eq("id",e);if(s)throw new Error(`Supabase error: ${s.message}`);return!0}catch(s){throw s}},async upsertCustomer(e){try{const r=await this.getCustomerByPhone(e.phone);if(r)return await this.updateCustomer(r.id,e),{...r,...e};{const r=await this.createCustomer(e);if(!r)throw new Error("Failed to create customer");return r}}catch(r){throw r}},async getAllCustomers(){try{const{data:e,error:t}=await r.from("customers").select("*").eq("is_active",!0).order("created_at",{ascending:!1});if(t)throw new Error(`Supabase error: ${t.message}`);return e||[]}catch(e){throw e}},subscribeToCustomers:e=>r.channel("customers").on("postgres_changes",{event:"*",schema:"public",table:"customers"},e).subscribe()},g={async testOrderStatusChange(e,t){try{const{error:s}=await r.from("orders").update({status:t,updated_at:(new Date).toISOString()}).eq("order_number",e);return s?{success:!1,error:s.message}:{success:!0,message:"Order status updated"}}catch(s){return{success:!1,error:"Test failed"}}},async checkOrderExists(e){try{const{data:t,error:s}=await r.from("orders").select("*").eq("order_number",e).single();return s?{success:!1,error:"Order not found"}:{success:!0,data:t}}catch(t){return{success:!1,error:"Check failed"}}},async getAllOrders(){try{const{data:e,error:t}=await r.from("orders").select("*").order("created_at",{ascending:!1}).limit(10);return t?{success:!1,error:t.message}:{success:!0,data:e}}catch(e){return{success:!1,error:"Get orders failed"}}}};"undefined"!=typeof window&&(window.testNotificationSystem=g);const y=new class{async sendPushNotification(e,t,s,a){try{const{data:o,error:n}=await r.from("push_subscriptions").select("subscription").eq("user_id",e);if(n)return;if(!o||0===o.length)return;for(const e of o)await this.sendToSubscription(e.subscription,t,s,a)}catch(o){}}async sendToSubscription(e,r,t,s){}async notifyOrderStatusChange(e,r,t){const s={pending:"Buyurtmangiz qabul qilindi!",confirmed:"Buyurtmangiz tasdiqlandi!",processing:"Buyurtmangiz tayyorlanmoqda!",ready:"Buyurtmangiz tayyor!",delivered:"Buyurtmangiz yetkazildi!",cancelled:"Buyurtmangiz bekor qilindi!"}[r]||"Buyurtmangiz holati o'zgartirildi",a={orderId:e,status:r,type:"order_status_change"};await this.sendPushNotification(t,"ðŸ”” Buyurtma Holati O'zgartirildi",s,a)}};export{c as a,o as b,w as c,y as d,u as e,i as g,a as i,n as m,h as o,l as p,r as s,g as t};
